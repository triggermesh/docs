version: 2.1

orbs:
  python: circleci/python@1
  go: circleci/go@1
  gcp-cli: circleci/gcp-cli@1

jobs:
  build:
    executor:
      name: python/default
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - run: pip install mkdocs-material mkdocs-redirects
      - run:
          name: Building package
          command: make build
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  publish-image:
    executor:
      name: gcp-cli/google
    steps:
      - attach_workspace:
          at: ~/
      - gcp-cli/initialize
      - run:
          name: Publishing docker image
          command: IMAGE_SHA=${CIRCLE_SHA1} IMAGE_TAG=${CIRCLE_TAG:-latest} make cloudbuild

  release:
    executor:
      name: go/default
      tag: '1.15'
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Building release package
          command: make release
          environment:
            DIST_DIR: /tmp/dist
      - run:
          name: Installing github-release tool
          command: go get github.com/meterup/github-release
      - run:
          name: Creating github release
          command: |
            PRE_RELEASE=${CIRCLE_TAG/${CIRCLE_TAG%-rc[0-9]*}/}
            github-release delete -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -t ${CIRCLE_TAG} 2>/dev/null ||:
            ./scripts/release-notes.sh ${CIRCLE_TAG} | github-release release ${PRE_RELEASE:+-p} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -t ${CIRCLE_TAG} -d -

            max_tries=3
            for _ in $(seq 1 ${max_tries}); do
              github-release info -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -t ${CIRCLE_TAG} >/dev/null && break
              sleep 1
            done

            for f in $(find /tmp/dist -type f); do github-release upload -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -t ${CIRCLE_TAG} -n $(basename ${f}) -f ${f} ; done

  deploy:
    description: Patches target cluster configuration
    executor:
      name: go/default
      tag: '1.15'
    parameters:
      cluster:
        type: string
      committer_name:
        type: string
        default: TriggerMesh Bot
      committer_email:
        type: string
        default: bot@triggermesh.com
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Configuring git
          command: |
            git config --global user.name '<< parameters.committer_name >>'
            git config --global user.email '<< parameters.committer_email >>'
      - run:
          name: Cloning config repository
          command: git clone --single-branch git@github.com:triggermesh/config.git tmconfig
      - run:
          name: Updating overlays/<< parameters.cluster >>/sources manifests
          working_directory: tmconfig/
          command: |
            sed -i overlays/<< parameters.cluster >>/docs/deployment.yaml -e "s|gcr.io/triggermesh/docs:.*|gcr.io/triggermesh/docs:"${CIRCLE_TAG:-${CIRCLE_SHA1}}"|g"
            git --no-pager diff
      - run:
          name: Committing overlays/<< parameters.cluster >>/docs updates
          working_directory: tmconfig/
          command: |
            git add overlays
            git commit -m "Update overlays/<< parameters.cluster >>/docs deployment to '${CIRCLE_TAG:-${CIRCLE_SHA1}}'"
            git push origin main

workflows:
  build-test-and-publish:
    jobs:
      - build:
          context: production
          filters:
            tags:
              only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
      - publish-image:
          context: production
          requires:
            - build
          filters:
            tags:
              only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
            branches:
              only: main
      - deploy:
          name: update-production-config
          cluster: prod
          requires:
            - publish-image
          filters:
            tags:
              only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
            branches:
              ignore: /.*/
      - release:
          context: production
          requires:
            - publish-image
          filters:
            tags:
              only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
            branches:
              ignore: /.*/
